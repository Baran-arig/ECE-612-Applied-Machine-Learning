# -*- coding: utf-8 -*-
"""subSelectImages.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wmIKrnTdb0m41EL-rGhWq3p1zCEN-xvE
"""

import tensorflow as tf
import tensorflow_hub as tfhub
import matplotlib.pyplot as plt

# Pretrained model
model = tfhub.load('https://tfhub.dev/google/HRNet/coco-hrnetv2-w48/1')

folder_path = 'Images/'

file_paths = tf.data.Dataset.list_files(folder_path + '*.jpg')

dataset = file_paths.map(lambda x: (x, tf.io.decode_jpeg(tf.io.read_file(x), channels=3)))

# Counter for limiting the output
squirrelCounter = 0
birdCounter = 0

birdList = []
squirrelList = []

# Iterate over the dataset and process the images
for file_path, image in dataset:
    # Print the file name
    print("File Name:", file_path.numpy().decode())
    squirrelPrediction = 0
    birdPrediction = 0

    # Display the image using Matplotlib
    plt.imshow(image)
    plt.axis('on')  # Disable axis ticks and labels
    plt.show()

    # Preprocess the image
    processed_image = tf.cast(image, tf.float32) / 255.0

    # Run the pretrained model on the image
    resp = model.predict([processed_image])
    print("Output shape:", resp.shape)

    # Get the main classes it thinks it sees
    myIm = resp.numpy()
    ax_values = [17, 18, 188, 185]
    for ax in ax_values:
        test = myIm[:, :, :, ax].max()
        if test > 0.5:
            print("Ax:", ax, "Prediction:", test)
            if ax == 17:
                birdPrediction = test
            elif ax == 18:
                squirrelPrediction = test
        
        if birdPrediction > squirrelPrediction:
            birdList.append(file_path)
            birdCounter +=1
        
        else:
            squirrelList.append(file_path)
            squirrelCounter +=1
            
    
    # Increment the counter
  #  squirrelCounter += 1

    # Break the loop if the counter reaches five
    if squirrelCounter == 5 and birdCounter ==5:
        break